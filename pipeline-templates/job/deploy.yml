parameters:
  ServiceConnection:
  SolutionBaseName:
  Environment:

jobs:
- deployment: DeployFunctionApp
  pool:
    name: DAS - Continuous Deployment Agents
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - template: azure-pipelines-templates/deploy/step/get-product-app-insights.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppInsightsResourceGroup: $(SharedEnvResourceGroup)
            AppInsightsName: $(ProductAppInsightsName)
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.json
            ParametersPath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.parameters.json
            IsMultiRepoCheckout: true
            TemplateSecrets:
              ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)
              SharedStorageAccountConnectionString: $(SharedStorageAccountConnectionString)
              NServiceBusConnectionString: $(nServiceBusConnectionString)
              nServiceBusLicense: $(nServiceBusLicense)
              ApplicationInsightsConnectionString: $(ApplicationInsightsConnectionString)
        - template: azure-pipelines-templates/deploy/step/get-apim-subscription-key.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            ApimResourceGroup: $(SharedApimResourceGroup)
            ApimName: $(SharedApimName)
            SubscriptionId: $(FunctionAppNameReservation)
            PipelineVariableName: ReservationsApimSubscriptionKey
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/generate-config.yml@das-platform-building-blocks
          parameters:
            EnvironmentName: $(EnvironmentName)
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SourcePath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-reservations-jobs
            StorageAccountName: $(ConfigurationStorageAccountName)
            StorageAccountResourceGroup: $(SharedEnvResourceGroup)
            TargetFileName: '*.schema.json'
            TableName: Configuration
            ConfigurationSecrets:
              ReservationsApimSubscriptionKey: $(ReservationsApimSubscriptionKey)
              AzureWebJobsStorage: $(AzureWebJobsStorage)
              NServiceBusLicense: $(NServiceBusLicense)
              ServiceBusConnectionString: $(ServiceBusConnectionString)
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(functionAppNameCourse)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/SFA.DAS.Reservations.Functions.RefreshCourse.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(functionAppNameReservation)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/SFA.DAS.Reservations.Functions.Reservations.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(functionAppNameLegalEntities)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/SFA.DAS.Reservations.Functions.LegalEntities.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(functionAppNameReservationIndex)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/SFA.DAS.Reservations.Functions.ReservationIndex.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(functionAppNameProviderPermissions)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/SFA.DAS.Reservations.Functions.ProviderPermission.zip
